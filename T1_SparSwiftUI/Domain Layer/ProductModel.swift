//
//  ProductSrtuct.swift
//  T1_SwiftSpar
//
//  Created by Knapptan on 12.08.2024.
//

import Foundation

enum Country: String, CaseIterable, Decodable {
        case usa
        case canada
        case germany
        case france
        case italy
        case japan
        case china
        case brazil
        case russia
        case unknown
        
        // –°–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        var displayName: String {
            switch self {
            case .usa: return "–°–®–ê üá∫üá∏"
            case .canada: return "–ö–∞–Ω–∞–¥–∞ üá®üá¶"
            case .germany: return "–ì–µ—Ä–º–∞–Ω–∏—è üá©üá™"
            case .france: return "–§—Ä–∞–Ω—Ü–∏—è üá´üá∑"
            case .italy: return "–ò—Ç–∞–ª–∏—è üáÆüáπ"
            case .japan: return "–Ø–ø–æ–Ω–∏—è üáØüáµ"
            case .china: return "–ö–∏—Ç–∞–π üá®üá≥"
            case .brazil: return "–ë—Ä–∞–∑–∏–ª–∏—è üáßüá∑"
            case .russia: return "–†–æ—Å—Å–∏—è üá∑üá∫"
            case .unknown: return ""
            }
        }
    }

enum ProductPromotionType:  String, CaseIterable, Decodable {
    case priceHit
    case cardPrice
    case new
    case none
}

struct Product: Codable {
    let name: String                    // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
    let imageName: String?              // –ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º)"ProductImage"
    let rating: Double?                 // –†–µ–π—Ç–∏–Ω–≥ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º)
    let reviews: Int?                   // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∑—ã–≤–æ–≤ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º)
    let price: Double                   // –¶–µ–Ω–∞
    let discount: Double?               // –°–∫–∏–¥–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π)
    let countryOfOrigin: String         // –°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π)
    let isSoldByWeight: Bool            // –ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –≤–µ—Å—É
    let isSoldByQuantity: Bool          // –ü—Ä–∏–∑–Ω–∞–∫ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ—à—Ç—É—á–Ω–æ
    let pricePerKilogram: Double?       // –¶–µ–Ω–∞ –∑–∞ –∫–∏–ª–æ–≥—Ä–∞–º–º (–µ—Å–ª–∏ –ø—Ä–æ–¥–∞–∂–∞ –ø–æ –≤–µ—Å—É)
    let weight: Double?                 // –í–µ—Å –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–µ—Å–ª–∏ –ø—Ä–æ–¥–∞–∂–∞ –ø–æ –≤–µ—Å—É)
    let quantity: Int?                  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à—Ç—É–∫ (–µ—Å–ª–∏ –ø—Ä–æ–¥–∞–∂–∞ –ø–æ—à—Ç—É—á–Ω–æ)
    let promotion: String               // –¢–∏–ø –∞–∫—Ü–∏–∏ - –Ω–æ–≤—ã–π/—Ü–µ–Ω–∞ –ø–æ –∫–∞—Ä—Ç–µ/—É–¥–∞—Ä –ø–æ —Ü–µ–Ω–∞–º
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
    static func sampleProduct() -> Product {
        return Product(
            name: "–Ø–±–ª–æ–∫–∏ –ì—Ä—ç–Ω–Ω–∏ –°–º–∏—Ç –ó–µ–ª–µ–Ω—ã–µ, —Å–ø–µ–ª—ã–µ, —Å–æ—á–Ω—ã–µ",
            imageName: "RedApples",
            rating: 4.1,
            reviews: 12,
            price: 120.0,
            discount: 10.0,
            countryOfOrigin: "russia",
            isSoldByWeight: true,
            isSoldByQuantity: true,
            pricePerKilogram: 120.0,
            weight: 1.5,
            quantity: 5,
            promotion: "new"
        )
    }
    
}
